"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[838],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,g=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={},o="Introduction",l={unversionedId:"Git/basics",id:"Git/basics",title:"Introduction",description:"Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both",source:"@site/docs/Git/basics.md",sourceDirName:"Git",slug:"/Git/basics",permalink:"/docs/Git/basics",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Git/basics.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Grammar",permalink:"/docs/EnglishGrammar/intro"},next:{title:"OOPS",permalink:"/docs/OOPS/basics"}},s={},c=[{value:"Installation and configuration",id:"installation-and-configuration",level:2},{value:"Initialising",id:"initialising",level:2},{value:"Version control",id:"version-control",level:2},{value:"Branches",id:"branches",level:2},{value:"Setting up remote",id:"setting-up-remote",level:2},{value:"Git Pull and Git Push",id:"git-pull-and-git-push",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both\nhigh-level operations and full access to internals."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tool"),(0,r.kt)("li",{parentName:"ul"},"Remote repo")),(0,r.kt)("h2",{id:"installation-and-configuration"},"Installation and configuration"),(0,r.kt)("p",null,"It is an apt package and can be installed using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install git\n")),(0,r.kt)("p",null,"Configure you user-name and email-address to identify your commit"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},'git config --global user.name "FIRST_NAME LAST_NAME"\ngit config --global user.email "EMAIL-ID"\n')),(0,r.kt)("h2",{id:"initialising"},"Initialising"),(0,r.kt)("p",null,"To initialise a folder as a git folder\nOpen terminal"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd path/to/directory\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git init\n")),(0,r.kt)("h2",{id:"version-control"},"Version control"),(0,r.kt)("p",null,"To start, add file to git. Git will start tracking whatever files added.\nYou can add files to git using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git add FILENAME\ngit add FILE1 FILE2\n")),(0,r.kt)("p",null,"To add all file inside the current directory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},"git add .\n")),(0,r.kt)("p",null,"You can view the status of the files in a git enabled directory by using "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},"git status\n")),(0,r.kt)("p",null,"After changes are made, these changes are to be staged for a commit."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},"git stage FILENAME\n")),(0,r.kt)("p",null,"After the changes are staged, it can be committed.\nA commit creates a snapshot of all the files which were staged at that point.\nA commit must also always have a commit message. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},' git commit -m "PREFERABLY A DESCRIPTIVE MESSAGE STATING ALL THE CHANGES MADE IN THE COMMIT"\n')),(0,r.kt)("h2",{id:"branches"},"Branches"),(0,r.kt)("p",null,"You can create multiple branches to work on. Changes in the tracked files of\na branch does not reflect in other branches. You can create a new branch using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git branch BRANCH_NAME\n")),(0,r.kt)("p",null,"This will create anew branch from the existing branch from the latest version of files"),(0,r.kt)("p",null,"Switching of branches can be done using checkout command "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},"git checkout BRANCH_NAME\n")),(0,r.kt)("h2",{id:"setting-up-remote"},"Setting up remote"),(0,r.kt)("p",null,"You can set up remote using ssh:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For this first you need to generate ssh private key and public keys. This can be done using:\n",(0,r.kt)("inlineCode",{parentName:"li"},"ssh-keygen")," command")),(0,r.kt)("p",null,"After this step, you will be able to see the keys generated in  ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"~/.ssh")),"  folder"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Open the ",(0,r.kt)("strong",{parentName:"p"},"id_rsa.pub"),", copy the contents of the file. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Go to your remote repository, click on the clone button. and select ssh option. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"There you will find a link to Manage ssh keys. Click on it. It will direct you to a page where you can add you ssh key.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Paste the contents you have copies and give a suitable name for your device")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This will enable your system to communicate with repo without password. "))),(0,r.kt)("p",null,"After adding the ",(0,r.kt)("strong",{parentName:"p"},"ssh key"),", copy the ssh link from the clone section. "),(0,r.kt)("p",null,"In the git directory "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},"git remote add origin SSH_LINK_TO_REPO \n")),(0,r.kt)("h2",{id:"git-pull-and-git-push"},"Git Pull and Git Push"),(0,r.kt)("p",null,"All  the commits are local to your system. To update the local commits in remote repository\nyou need to push the changes to remote repository."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git push\n")),(0,r.kt)("p",null,"Above command assumes that you have added the remote origin. If not, please proceed to setting the remote origin\nand then push."),(0,r.kt)("p",null,"Conversely, to fetch changes from the remote repository, you need to pull from the remote repository."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git pull\n")),(0,r.kt)("p",null,"You need to add the remote origin to pull from remote repository"))}p.isMDXComponent=!0}}]);